
@{
    ViewBag.Title = "Calendar";
}

<h2>Calendar</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            @Html.ActionLink("Projects", "Index", "Projects")
        </li>
        <li class="breadcrumb-item">
            @Html.ActionLink("Tasks", "Index", "Tasks", new { @ViewBag.Project.Id })
        </li>
        <li class="breadcrumb-item active" aria-current="page">Tasks of @ViewBag.Project.Title</li>
    </ol>
</nav>
<div id="divErrors" style="display:none" class="alert alert-danger alert-dismissible fade show" role="alert">
    <strong>
        <span id="errors"></span>
    </strong>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<hr>
<div class="form-group">
    <div class="form-row">
        <div class="col-md-8">
            <div id='calendar'></div>
        </div>
        <div class="col-md-4">
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">
                        Details
                        <input id="Id" hidden>
                    </h5>
                    <p class="card-text">
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Title</label>
                                <input id="Title" class="form-control" value="-" disabled>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Details</label>
                                <textarea id="Details" class="form-control" value="-" disabled></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Expiration Date</label>
                                <input id="ExpirationDate" class="form-control" value="-" disabled>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Effort</label>
                                <input id="Effort" class="form-control" value="-" disabled>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Remaining Work</label>
                                <select id="RemainingWork" class="form-control"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>State</label>
                                <select id="StateId" class="form-control"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Activity</label>
                                <input id="Activity" class="form-control" value="-" disabled>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Priority</label>
                                <input id="Priority" class="form-control" value="-" disabled>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label>Is Completed</label>
                                <br />
                                <input id="IsCompleted" type="checkbox" class="form-check">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" id="Update" name="Update" class="btn btn-primary" value="Update" style="display:none">
                            </div>
                        </div>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    var projectId = @Html.ViewBag.Project.Id;

    $(function () {
        GetTasks(projectId);

        $('#Update').click(function () {
            UpdateTask();
        });
    });

    function UpdateTask() {
        var json = {
            'Id': $('#Id').val(),
            'IsCompleted': $('.IsCompleted').prop('checked') ?  true : false,
            'RemainingWork': $('#RemainingWork').val(),
            'StateId': $('#StateId').val()
        };

        $.post("/Tasks/Update", json).done(function(data){
            var isSuccessful = data.IsSuccessful;

            if (isSuccessful) {
                swal("Good job!", "The process has been successfully!.", "success");
                window.location = '/Tasks/Calendar?projectId=' + projectId;
            } else {
                var errors = data.Errors;
                displayValidationErrors(errors);
            }
        });
    }

    function GetTasks(projectId) {

        var events = [];

        $.post("/Tasks/GetTasksCalendar?projectId=" + projectId).done(function (data) {
            var isSuccessful = data.IsSuccessful;

            if (isSuccessful) {
                var json = data.ListTasksCalendar;

                for (var i = 0; i < json.length; i++) {
                    events.push({
                        title: json[i].Title,
                        start: json[i].Start,
                        end: json[i].End,
                        id: json[i].Id,
                        color: json[i].Color,
                        allDay: json[i].AllDay,
                        textColor: json[i].TextColor
                    });
                }

                var calendarEl = document.getElementById('calendar');

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    plugins: ['interaction', 'dayGrid'],
                    header: {
                        left: 'prevYear,prev,next,nextYear today',
                        center: 'title',
                        right: 'dayGridMonth,dayGridWeek,dayGridDay'
                    },
                    navLinks: true,
                    events: events,
                    eventClick: function (eventObj) {
                        GetTask(eventObj.event.id);
                    }
                });

                calendar.render();
            } else {
                var errors = data.Errors;
                displayValidationErrors(errors);
            }
        });
    }

    function GetTask(id) {
        $.post("/Tasks/Details?id=" + id).done(function (data) {
            var isSuccessful = data.IsSuccessful;

            if (isSuccessful) {
                var task = data.Task;

                $('#Id').val(task.Id);
                $('#Title').val(task.Title);
                $('#Details').val(task.Details);
                $('#ExpirationDate').val(task.ExpirationDate);
                $('#Effort').val(task.Effort);

                $('#State').val(task.State);
                $('#Activity').val(task.Activity);
                $('#Priority').val(task.Priority);

                var remainingWork = $("#RemainingWork");
                remainingWork.empty();

                for (var i = task.RemainingWork; i >= 0; i--) {
                    var option = $("<option />");
                    option.html(i);
                    option.val(i);
                    remainingWork.append(option);
                }

                remainingWork.val(task.RemainingWork);

                var states = $("#StateId");
                states.empty();

                $(data.States).each(function () {
                    var option = $("<option />");
                    option.html(this.Name);
                    option.val(this.Id);
                    states.append(option);
                });

                states.val(task.StateId);

                $("#RemainingWork").prop('min', 0);
                $("#RemainingWork").prop('max', task.RemainingWork);

                $('#Update').css('display', 'block');

            } else {
                var errors = data.Errors;
                displayValidationErrors(errors);
            }
        });
    }

    function displayValidationErrors(errors) {
        var $ul = $('<ul>');

        $ul.empty();
        $.each(errors, function (idx, errorMessage) {
            $ul.append('<li>' + errorMessage + '</li>');
        });

        $('#errors').html($ul);
        $('#divErrors').show();
    }
</script>

<style>
    #calendar {
        max-width: 900px;
        margin: 0 auto;
    }
</style>